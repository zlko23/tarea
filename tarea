class Tarea {
  constructor(codigo, duracion) {
    this.codigo = codigo;
    this.duracion = duracion;
    this.complejidad = 0;
  }
  getDuracion() {
    return this.duracion;
  }
  getCosto() {
    return this.duracion <= 5 ? 100 : 200;
  }
  getCostoTotal() {
    return this.getCosto();
  }
}

class TareaCompuesta {
  constructor(codigo, duracion, subtareas = []) {
    this.codigo = codigo;
    this.duracion = duracion;
    this.subtareas = subtareas;
  }
  agregar(unaTarea) {
    this.subtareas.push(unaTarea);
  }
  getDuracion() {
    return this.subtareas.reduce((acum, tarea) => acum + tarea.getDuracion(), this.duracion);
  }
  getCosto() {
    return this.duracion <= 5 ? 100 : 200;
  }
  getCostoTotal() {
    return this.getCosto() + this.subtareas.reduce((acum, tarea) => acum + tarea.getCostoTotal(), 0);
  }
}

// Creación de tareas
const t131 = new Tarea("1.3.1", 2);
const t132 = new Tarea("1.3.2", 1);
const t13 = new TareaCompuesta("1.3", 3);
t13.agregar(t131);
t13.agregar(t132);

console.log(`La duración total de la tarea ${t13.codigo} es de: ${t13.getDuracion()} minutos`);
console.log(`Costos totales de la tarea ${t13.codigo} = $ ${t13.getCostoTotal()}
  ${t131.codigo} =\t ${t131.duracion} minutos \t$ ${t131.getCosto()}
  ${t132.codigo} =\t ${t132.duracion} minutos \t$ ${t132.getCosto()}
  ${t13.codigo} =\t\t ${t13.duracion} minutos \t$ ${t13.getCosto()}`);
console.log('\n');

const t1221 = new Tarea("1.2.2.1", 3);
const t1222 = new Tarea("1.2.2.2", 6);
const t121 = new Tarea("1.2.1", 4);
const t122 = new TareaCompuesta("1.2.2", 1, [t1221, t1222]);
const t12 = new TareaCompuesta("1.2", 4, [t121, t122]);

console.log(`La duración total de la tarea ${t12.codigo} es de: ${t12.getDuracion()} minutos`);
console.log(`Costos totales de la tarea ${t12.codigo} = $ ${t12.getCostoTotal()}
  ${t1221.codigo} =\t ${t1221.duracion} minutos \t$ ${t1221.getCosto()}
  ${t1222.codigo} =\t ${t1222.duracion} minutos \t$ ${t1222.getCosto()}
  ${t121.codigo} =\t ${t121.duracion} minutos \t$ ${t121.getCosto()}
  ${t122.codigo} =\t ${t122.duracion} minutos \t$ ${t122.getCosto()}
  ${t12.codigo} =\t\t ${t12.duracion} minutos \t$ ${t12.getCosto()}`);

console.log('\n');

const t11 = new Tarea("1.1", 6);

t11.getDuracion();
console.log(`La duración total de la tarea ${t11.codigo} es de: ${t11.getDuracion()} minutos
  ${t11.codigo} =\t ${t11.getDuracion()} minutos`);
console.log(`Costos totales de la tarea ${t11.codigo} = $ ${t11.getCostoTotal()}
  ${t11.codigo} =\t$ ${t11.getCosto()}`);
console.log('\n');

const t1 = new TareaCompuesta("1", 2, [t11, t12, t13]);

t1.getDuracion();
console.log(`La duración total de la tarea ${t1.codigo} es de: ${t1.getDuracion()} minutos`);
console.log(`Costos totales de la tarea ${t1.codigo} = $ ${t1.getCostoTotal()}
  ${t11.codigo}  =\t$ ${t11.getCostoTotal()}
  ${t12.codigo} =\t$ ${t12.getCostoTotal()}
  ${t13.codigo} =\t$ ${t13.getCostoTotal()}
  ${t1.codigo} =\t$ ${t1.getCosto()}`);
console.log('\n');

const t21 = new Tarea("2.1", 4);
const t2 = new TareaCompuesta("2", 17, [t21]);

t2.getDuracion();
console.log(`La duración total de la tarea ${t2.codigo} es de: ${t2.getDuracion()} minutos`);
console.log(`Costos totales de la tarea ${t2.codigo} = $ ${t2.getCostoTotal()}`);
console.log('\n');


class Proyecto{
  constructor(tareas=[]){
    this.tareas = tareas;
  }
  getDuracion(){
    return this.tareas.reduce(
      (total, tarea) => total + tarea.getDuracion(), 0);
  }
  getCostoTotal() {
    return this.tareas.reduce((total, tarea) => total + tarea.getCostoTotal(), 0);
  }
}

const proyecto = new Proyecto([t1, t2]);

console.log(proyecto);
console.log('\n');
console.log(`La duración total del Proyecto es de: ${proyecto.getDuracion()} minutos`);
console.log(`El costo total del Proyecto es de: $ ${proyecto.getCostoTotal()} `);
console.log('\n');
